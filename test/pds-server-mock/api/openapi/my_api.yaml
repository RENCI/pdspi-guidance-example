openapi: '3.4'
info:
  title: "fhir server"
  version: "1.0.0"
paths:
  /v1/plugin/pdspi-guidance-example/config:
    get:
      operationId: api.get_guidance_example_config
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
        '404':
          description: not found
  /v1/plugin/pdspi-guidance-example2/config:
    get:
      operationId: api.get_guidance_example2_config
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
        '404':
          description: not found
  /v1/plugin/pdspi-mapper-example/config:
    get:
      operationId: api.get_mapper_config
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
        '404':
          description: not found
  /v1/plugin/pdspi-fhir-example/config:
    get:
      operationId: api.get_fhir_config
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
        '404':
          description: not found
  /v1/plugin/pdspi-mapper-example/mapping:
    post:
      operationId: api.get_phenotype
      parameters:
        - name: patient_id
          in: query
          schema:
            type: string
          required: true
        - name: timestamp
          in: query
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema: {}
      responses: # has to match output of dispatcher.py
        '200':
          description: Successful operation
          content:
            application/json:
              schema: {}
        '404':
          description: not found
  /v1/plugin/tx-vis/vega_spec:
    post:
      summary: Given a visualization type id and visualization parameters, return the vega spec for visualization
      operationId: api.post_vega_spec
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VegaSpecInputs'
      responses:
        '200':
          description: "Vega spec matching query"
          content:
            application/json:
              schema: {}
        '400':
          description: "Bad Request"
        '500':
          description: "Internal Server Error"
  /v1/plugin/pdspi-guidance-example/guidance:
    post:
      summary: given a patient ID and a plugin id, return the guidance
      operationId: api.post_guidance
      responses:
        '200':
          description: guidance matching query
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Guidance'
        '400':
          description: bad input parameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuidanceInputs'
  /v1/plugin/pdspi-fhir-example/Patient/{ptid}:
    get:
      summary: given a patient ID and a plugin id, return the guidance
      operationId: api.get_patient
      parameters:
        - name: ptid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: guidance matching query
          content: 
            application/json:
              schema: {}
  /v1/plugin/pdspi-fhir-example/Condition:
    get:
      summary: given a patient ID and a plugin id, return the guidance
      operationId: api.get_condition
      parameters:
        - name: patient
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: guidance matching query
          content: 
            application/json:
              schema: {}
  /v1/plugin/pdspi-fhir-example/Observation:
    get:
      summary: given a patient ID and a plugin id, return the guidance
      operationId: api.get_observation
      parameters:
        - name: patient
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: guidance matching query
          content: 
            application/json:
              schema: {}
  /v1/plugin/pdspi-config/config:
    get:
      summary: gets list of plugins with their selectors and required variables
      operationId: api.get_config
      parameters:
        - name: piid
          example: "pdspi-guidance-example"
          in: query
          required: false
          schema:
            type: string
          description: if present, return PluginConfig tailored to include only information about the indicated plugin. if not present, return all guidance piids and their info
      responses:
        '200':
          description: config matching query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PluginConfig'
        '400':
          description: bad input parameter
  /v1/plugin/pdspi-config/customUnits:
    get:
      summary: gets list of plugins with their selectors and required variables
      operationId: api.get_custom_units
      responses:
        '200':
          description: config matching query
          content:
            application/json:
              schema: {}
        '400':
          description: bad input parameter
  /v1/plugin/pdspi-config/selectors:
    get:
      summary: gets list of plugins with their selectors and required variables
      operationId: api.get_selectors
      responses:
        '200':
          description: config matching query
          content:
            application/json:
              schema: {}
        '400':
          description: bad input parameter
  # /profile:
  #   get:
  #     summary: Add patient record directory, patient_id, system and diagnosis code
  #     operationId: api.get_profile
  #     parameters:
  #       - in: query
  #         name: ptid
  #         example: 38
  #         schema:
  #           type: string
  #         required: true
  #       - in: query
  #         name: piid
  #         example: "pdspi-guidance-example"
  #         schema:
  #           type: string
  #         required: true
  #       - in: query
  #         name: timestamp
  #         example: "2019-12-03T13:41:09.942+00:00"
  #         schema:
  #           type: string
  #         required: true
  #     responses: # has to match output of dispatcher.py
  #       '200':
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/PatientVariable'
  #       '405':
  #         description: Invalid input
components:
  schemas:
    VegaSpecInputs:
      type: object
      properties:
        typeid:
          type: string
          description: "type of the visualization chart to return spec for"
          default: "line_chart"
          example: "multiple_line_chart"
        x_axis_title:
          type: string
          description: "customize title of the x axis for the visualization chart"
          default: "x axis"
          example: "Time"
        y_axis_title:
          type: string
          description: "customize title of the y axis for the visualization chart"
          default: "y axis"
          example: "Drug Dosage"
    GuidanceInputs:
      type: object
      required:
        - piid
        - ptid
        - timestamp
      properties:
        piid:
          type: string
          example: "pdspi-guidance-example"
          description: uniquely identifies the enabled and installed plugin to use for retrieving guidance
        ptid:
          type: string
          example: "38"
          description: the ID of the patient for which guidance is required
        timestamp:
          type: string
          format: date-time
          example: "2019-12-03T13:41:09.942+00:00"
        pluginParameterValues:
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        userSuppliedPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/PatientVariable'
    Guidance:
      type: object
      properties:
        title:
          type: string
        id:
          type: string
        justification:
          type: array
          items:
            $ref: '#/components/schemas/PatientVariable'
          description: "a list of patient variables that were used and how they were computed and why they were needed "
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
        vizOutputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
    Card:
      type: object
      required:
        - id
        - summary
        - indicator
        - source
      properties:
        id: 
          type: string
        title:
          type: string
        summary:
          type: string
          description: "cds-hooks: <140-character summary sentence for display to the user inside of this card"
          example: "some <140 char Summary Message"
        detail:
          type: string
          description: "cds-hooks: - optional detailed information to display (GitHub Flavored Markdown)"
          example: "some sort of optional GitHub Markdown details"
        indicator:
          type: string
          description: " urgency/importance of what this card conveys (info/warning/critical)"
          example: "info"
        source:
          $ref: "#/components/schemas/Source"
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/Suggestion'
        selectionBehavior:
          type: string
          description: " intended behavior of the suggestions. If suggestions present, value must be at-most-one"
        links: 
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Output:
      type: object
      required:
        - id
        - name
        - data
        - specs
      properties:
        id:
          type: string
          example: "oid-1"
        name:
          type: string
          example: "Time-series data"
        description:
          type: string
          example: "Information about time-series data"
        data:
          type: array
          description: "data to be visualized"
          items:
            $ref: '#/components/schemas/DataItem'
        specs:
          type: array
          description: "Vega-lite spec used for guidance visualization"
          items:
            $ref: '#/components/schemas/Spec'
    DataItem:
      type: object
      required:
        - x
      properties:
        x:
          type: number
          description: "data point value that can be used to plot for x axis"
        y:
          type: number
          description: "data point value that can be used to plot for y axis"
        group:
          type: string
          description: "groups of data points in which different groups can be plotted differently, e.g., different groups can be plotted with different colors."
    Spec:
      type: object
      required:
        - title
        - data
      properties:
        $schema:
          type: string
          description: "URL to JSON schema for a vega-lite specification"
          example: "https://vega.github.io/schema/vega-lite/v4.json"
        title:
          type: string
          description: "title for the plot"
          example: "Line chart"
        description:
          type: string
          example: "Time-series line chart"
        width:
          type: string
          example: "container"
        height:
          type: string
          example: "container"
        autosize:
          type: object
          properties:
            resize:
              type: boolean
              example: true
        data:
          type: object
          description: "An object describing the data source"
          properties:
            name:
              type: string
              description: "Provide a placeholder name and bind data at runtime"
              example: "data"
        mark:
          type: string
          description: "type of the mark which is the basic visual building block of a visualization"
          example: "line"
        encoding:
          type: object
          description: "visualization encodings"
          properties:
            x:
              type: object
              description: "visualization encodings for x axis"
              properties:
                bin:
                  type: boolean
                  description: "whether to aggregate data into bins"
                  example: true
                field:
                  type: string
                  description: "the field name in data to bind to x axis at runtime"
                  example: "x"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "quantitative"
                axis:
                  type: object
                  description: "specify axis properties, e.g., title of the axis"
                  properties:
                    title:
                      type: string
                      example: "x axis"
            y:
              type: object
              description: "visualization encodings for y axis"
              properties:
                aggregate:
                  type: string
                  description: "the field name in data to aggregate and bind to y axis at run time"
                  example: "count"
                field:
                  type: string
                  description: "the field name in data to bind to y axis at runtime"
                  example: "y"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "quantitative"
                axis:
                  type: object
                  description: "specify axis properties, e.g., title of the axis"
                  properties:
                    title:
                      type: string
                      example: "y axis"
            color:
              type: object
              description: "visualization encodings for color"
              properties:
                field:
                  type: string
                  description: "the field name in data to bind to color at runtime"
                  example: "group"
                type:
                  type: string
                  description: "type of the data field to bind for visualization"
                  example: "nominal"
    Source:
      type: object
      required:
        - label
      properties:
        label:
          type: string
          description: "short, human-readable label to display source of the card’s information"
          example: Human-readable source label
        url:
          type: string
          description: "optional absolute URL to load to learn more about the organization or data set"
          example: "https://example.com"
        icon:
          type: string
          description: " absolute url for an icon for the source of this card (100x100 pixel PNG without any transparent regions)"
          example: "https://example.com/img/icon-100px.png"
    Suggestion:
      type: object
      required:
        - label
      properties:
        uuid:
          type: string
          description: "unique identifier for auditing and logging suggestions"
          example: e1187895-ad57-4ff7-a1f1-ccf954b2fe46
        label:
          type: string
          description: "human-readable label to display for this suggestion"
          example: "Human-readable suggestion label"
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    Action:
      type: object
      required:
        - type
        - description
      properties:
        title:
          type: string
        id:
          type: string
        type:
          type: string
          description: "type of action being performed (create/update/delete)"
          example: "create"
        description:
          type: string
          description: "human-readable description of the suggested action"
          example: "Create a prescription for Acetaminophen 250 MG"
        resource:
          type: string
          description: "FHIR resource to create/update or id of resource to delete"
          example: "MedicationRequest"
    Link:
      type: object
      required:
        - label
        - url
        - type
      properties:
        label:
          type: string
          description: "human-readable label to display"
          example: "SMART Example App"
        url:
          type: string
          description: "URL to GET when link is clicked"
        type:
          type: string
          description: "type of the given URL (absolute/smart) "
        appContext:
          type: string
          description: "additional context to share with a linked SMART app"
    PluginConfig:
      type: object
      properties:
        title:
          type: string
          description: "Meaningful name for this plugin"
          example: "Aminogycoside dosing guidance"
        piid:
          type: string
          description: "A string, unique to this deployment, used to identify this plugin in realtime"
          example: "pdspi-aminogycoside-nomogram"
        pluginSelectors:
          type: array
          items:
            $ref: '#/components/schemas/PluginSelector'
        pluginParameterDefaults:
          type: array
          items:
            $ref: '#/components/schemas/PluginParameter'
        requiredPatientVariables:
          type: array
          items:
            $ref: '#/components/schemas/PatientVariableType'
    PluginSelector:
      description: The combination of selector values map to a unique plugin. That is, no two plugins can install with the identical vectors of selector values.  
      type: object
      properties:
        title:
          type: string
          example: "Gentamicin"
        code:
          type: string
          example: "1596450"
        selectorType:
          $ref: '#/components/schemas/PluginSelectorType'
    PluginSelectorType:
      description: Plugins providing Drug selector types will always use RxCUI when naming the drug. Diagnosis types will use ICD10, and genetics will use SNP for variants and NCBI for gene and transcript names.  
      type: object
      properties:
        title:
          type: string
          example: "Drug"
        system:
          type: string
          example: "RxCUI"
    PluginParameter:
      type: object
      properties:
        value:
          type: string
          description: the actual value of the model parameter
          example: "Hartford"
        units:
          type: string
          description: "The unit is standard throughout the pds system. It's up to the guidance plugin to make unit conversions as needed by the guidance model, just as it is up to the dashboard to make unit conversions as needed by the end user."
          example: "none"
        parameterType:
          $ref: '#/components/schemas/PluginParameterType'
    PluginParameterType:
      type: object
      properties:
        title:
          type: string
          example: "Extended interval nomogram"
        code:  
          type: string
          example: "PDS:01"
        system: 
          type: string
          example: "PDS.plugin.parameters"
        legalValues:
          type: string
          example: 'enum: ["Hartford", "Urban-Craig", "Conventional A", "Conventional B"]'
        description:
          type: string
          example: "This calculator uses one of four extended-interval nomograms. Please choose one nomogram."
    PatientVariable:
      type: object
      properties:
        value:
          type: string
          description: the actual value of the patient variable. If 'pds-retrieve-datum' then retrieve from patient data warehouse, otherwise use the value as-is
          example: "0.5"
        units:
          type: string
          description: "The unit is standard throughout the pds system. It's up to the guidance plugin to make unit conversions as needed by the guidance model, just as it is up to the dashboard to make unit conversions as needed by the end user."
          example: "years"
        certitude:
          type: integer
          description: The certitude of the value, 0 not certain, 1 somewhat certain, 2 certain
          example: 2
        how:
          type: string
          description: "If the variable is 'pds-retrieve-datum', then 'how' will read 'The value was specified by the end user.'"
          example: "The value was specified by the end user."
        variableType:
          $ref: '#/components/schemas/PatientVariableType'
    PatientVariableType:
      type: object
      properties:
        title:
          type: string
          example: "Age"
        clinicalFeatureVariable:
          type: string
          example: "LOINC:30525-0"
        description: 
          type: string
          example: "Age is a floating point number; e.g., a 6 month old child is 0.5 years."
        why:
          type: string
          example: "Age is used to calculate the creatinine clearance. Dosing is lower for geriatric patient and contraindicated for pediatric patients"
